name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # ou la branche que vous utilisez pour le déploiement
  pull_request:
    branches:
      - main  # ou la branche que vous utilisez pour le déploiement

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install black ruff pytest

    - name: Run tests with pytest
      run: |
        pytest --maxfail=1 --disable-warnings -q

    - name: Format code with black
      run: |
        black --check .

    - name: Lint code with ruff
      run: |
        ruff check .

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test-and-lint
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: docker/cache-action@v2
      with:
        path: |
          ~/docker-cache

    - name: Build Docker image
      run: |
        docker build -t my-app:latest .

    - name: Log in to Render
      uses: render/render-cli@v2
      with:
        token: ${{ secrets.RENDER_TOKEN }}

    - name: Deploy to Render
      run: |
        render deploy --service-id <YOUR_SERVICE_ID> --image my-app:latest
